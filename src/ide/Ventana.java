/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ide;

import java.awt.Color;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledDocument;

/**
 *
 * @author Peper
 */
public class Ventana extends javax.swing.JFrame {

    private TextLineNumber tln;
    private boolean p1, b2;
    private int rowNum, colNum;
    private String ruta;
    private StyleContext sc;
    private StyledDocument doc;
    private Style style;
    private Ejecutor ejecutor;
    private FileReader f;
    private Colorear c;

    public Ventana() throws IOException {
        //comentario de modificacion
        initComponents();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("IDE");
        //comentario
        tln = new TextLineNumber(jTextPaneCode);
        jScrollPane2.setRowHeaderView(tln);

        style = jTextPaneCode.addStyle("Estilo", null);
        //jScrollPane2.setColumnHeaderView(tln);

        ejecutor = new Ejecutor();
        
        p1 = true;
        b2 = true;

        rowNum = colNum = 0;

        ruta = "";

        sc = new StyleContext();
        doc = jTextPaneCode.getStyledDocument();
        
        c = new Colorear(jTextPaneCode);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextPaneErrores = new javax.swing.JTextPane();
        jTextField2 = new javax.swing.JTextField();
        jToolBar1 = new javax.swing.JToolBar();
        jButtonBuild = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jToolBar2 = new javax.swing.JToolBar();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPaneCode = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jTextPaneErrores.setEditable(false);
        jScrollPane7.setViewportView(jTextPaneErrores);

        jTabbedPane1.addTab("Errores", jScrollPane7);
        jTabbedPane1.addTab("Resultados", jTextField2);

        jToolBar1.setRollover(true);

        jButtonBuild.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide/Icons/build.png"))); // NOI18N
        jButtonBuild.setToolTipText("Compilar");
        jButtonBuild.setFocusable(false);
        jButtonBuild.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonBuild.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonBuild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuildActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonBuild);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide/Icons/buildrun.png"))); // NOI18N
        jButton2.setToolTipText("Compilar y Ejecutar");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide/Icons/run.png"))); // NOI18N
        jButton3.setToolTipText("Ejecutar");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTabbedPane2.addTab("Lexico", jScrollPane1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        jTabbedPane2.addTab("Sintactico", jScrollPane3);

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane4.setViewportView(jTextArea3);

        jTabbedPane2.addTab("Semantico", jScrollPane4);

        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jScrollPane5.setViewportView(jTextArea4);

        jTabbedPane2.addTab("Hash Table", jScrollPane5);

        jTextArea5.setColumns(20);
        jTextArea5.setRows(5);
        jScrollPane6.setViewportView(jTextArea5);

        jTabbedPane2.addTab("Condigo Intermedio", jScrollPane6);

        jToolBar2.setRollover(true);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide/Icons/open.png"))); // NOI18N
        jButton4.setToolTipText("Abrir");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton4);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide/Icons/new.png"))); // NOI18N
        jButton5.setToolTipText("Nuevo");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton5);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide/Icons/save.png"))); // NOI18N
        jButton6.setToolTipText("Guardar");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton6);

        jLabel1.setText("Linnea: 0 Columna: 0");

        jTextPaneCode.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextPaneCodeCaretUpdate(evt);
            }
        });
        jTextPaneCode.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTextPaneCodeAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jTextPaneCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextPaneCodeFocusGained(evt);
            }
        });
        jTextPaneCode.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTextPaneCodePropertyChange(evt);
            }
        });
        jTextPaneCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextPaneCodeKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextPaneCodeKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTextPaneCode);

        jMenu1.setText("Archivo");

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide/Icons/new.png"))); // NOI18N
        jMenuItem6.setText("Nuevo");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide/Icons/open.png"))); // NOI18N
        jMenuItem1.setText("Abrir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);
        jMenu1.add(jSeparator1);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide/Icons/close.png"))); // NOI18N
        jMenuItem7.setText("Cerrar");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide/Icons/save.png"))); // NOI18N
        jMenuItem3.setText("Guardar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Guerdar como...");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);
        jMenu1.add(jSeparator2);

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide/Icons/exit.png"))); // NOI18N
        jMenuItem2.setText("Salir");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editar");

        jMenuItem5.setText("Ocultar");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 716, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.out.println("Este Boton Funciona");
        abrir();
        try {
            compilar();
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        if (p1 == true) {
            jTabbedPane1.setVisible(false);
            p1 = false;
        } else {
            jTabbedPane1.setVisible(true);
            p1 = true;
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed

    }//GEN-LAST:event_formKeyPressed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        guardar();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        guardarComo();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        jTextPaneCode.setText("");
        ruta = "";
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Desea Guardarlo antes?", "Advertencia",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if (ruta.equals("")) {
                guardarComo();
            } else {
                guardar();
            }
        }   // no option
        jTextPaneCode.setText("");

    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Desea Guardarlo antes?", "Advertencia",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if (ruta.equals("")) {
                guardarComo();
            } else {
                guardar();
                ruta = "";
            }
        }// no option    
        jTextPaneCode.setText("");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (ruta.equals("")) {
            guardarComo();
        } else {
            guardar();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        abrir();
        try {
            compilar();
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            c.colorear();
        } catch (BadLocationException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButtonBuildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuildActionPerformed
        try {
            compilar();
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonBuildActionPerformed

    private void jTextPaneCodeCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextPaneCodeCaretUpdate
        if (b2) {
            rowNum = tln.getPx();
            colNum = tln.getPy();
            jLabel1.setText("Fila: " + rowNum + " Columna: " + colNum);
            try {
                c.colorear();
            } catch (BadLocationException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        b2 = true;
    }//GEN-LAST:event_jTextPaneCodeCaretUpdate

    private void jTextPaneCodePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTextPaneCodePropertyChange
    }//GEN-LAST:event_jTextPaneCodePropertyChange

    private void jTextPaneCodeAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTextPaneCodeAncestorAdded

    }//GEN-LAST:event_jTextPaneCodeAncestorAdded

    private void jTextPaneCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextPaneCodeFocusGained

    }//GEN-LAST:event_jTextPaneCodeFocusGained

    private void jTextPaneCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextPaneCodeKeyTyped
        /*try {
            compilar2();
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_jTextPaneCodeKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        guardar();
        //resetStyle();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextPaneCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextPaneCodeKeyPressed
        
    }//GEN-LAST:event_jTextPaneCodeKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new Ventana().setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    void guardarComo() {
        try {
            JFileChooser chooser = new JFileChooser();

            int returnVal = chooser.showSaveDialog(chooser);

            ruta = chooser.getSelectedFile().getAbsolutePath();

            File file = new File(ruta);

            file.createNewFile();

            // Writes the content to the file
            try ( // creates a FileWriter Object
                    FileWriter writer = new FileWriter(file)) {
                writer.write(jTextPaneCode.getText());
                writer.flush();
            }
        } catch (IOException e) {
        }
    }

    void guardar() {
        if (!"".equals(ruta)) {
            try {
                File file = new File(ruta);
                //Seborra el archivo para no sobrescribirlo
                /*if (file.delete()) {
                    //System.out.println(file.getName() + " is deleted!");
                } else {
                    //System.out.println("Delete operation is failed.");
                }*/

                file.createNewFile();

                // Writes the content to the file
                try ( // creates a FileWriter Object
                    FileWriter writer = new FileWriter(file)) {
                    // Writes the content to the file
                    writer.write(jTextPaneCode.getText());
                    writer.flush();
                }

            } catch (IOException e) {

            }
        } else {
            if (JOptionPane.showConfirmDialog(null, "El Archivo no a sido"
                    + " creado\nDesea Crearlo?", "Advertencia",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                guardarComo();
                //System.out.println(ruta);
            } else {
                // no option
                jTextPaneCode.setText("");
            }

        }
    }

    void abrir() {
        b2 = false;
        String cadaxuliar = "";
        JFileChooser chooser = new JFileChooser();
        /*FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "Archivos Ruby", "rb");
        chooser.setFileFilter(filter);*/

        int returnVal = chooser.showOpenDialog(chooser);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            //System.out.println("You chose to open this file: " +
            //chooser.getSelectedFile().getName());

            File archivo = null;
            FileReader fr = null;
            BufferedReader br = null;

            try {
                // Apertura del fichero y creacion de BufferedReader para poder
                // hacer una lectura comoda (disponer del metodo readLine()).
                archivo = new File(chooser.getSelectedFile().getAbsolutePath());
                fr = new FileReader(archivo);
                br = new BufferedReader(fr);
                ruta = chooser.getSelectedFile().getAbsolutePath();

                jTextPaneCode.setText("");

                // Lectura del fichero
                String linea;

                while ((linea = br.readLine()) != null) {
                    //System.out.println(linea);

                    //jTextAreaCode.setText(jTextAreaCode.getText() + linea + "\n");
                    cadaxuliar += linea + "\n";
                    //jTextArea1.setText(jTextArea1.getText() + linea + "\n");
                }
                cadaxuliar = cadaxuliar.substring(0, cadaxuliar.length() - 1);//para que no se agruegue el ultimo espacio
                jTextPaneCode.setText(cadaxuliar);
            } catch (IOException e) {
            } finally {
                try {
                    if (null != fr) {
                        fr.close();
                    }
                } catch (IOException e2) {
                }
            }

        }
        b2 = true;
    }

    public void colorear() throws IOException {
        String linea = "";
        
        f = new FileReader("src/ide/styleddoc.txt");

        if (!"".equals(jTextPaneCode.getText())) {
            try (BufferedReader b = new BufferedReader(f)) {

                //resetStyle();
                
                while ((linea = b.readLine()) != null) {
                    //cadaux += linea + "\n";
                    //System.out.println(linea);
                    String[] spt = linea.split("\\|");
                    //System.out.println("Offset:" + spt[0] + " Tipo:" + spt[1] + " Valor:" + spt[2]);
                    if ("PRESERVADA".equals(spt[1])) {
                        int auxini = Integer.parseInt(spt[0]) - spt[2].length()+1;
                        //System.out.println("auxini" + auxini);
                        findRemplace(auxini, Integer.parseInt(spt[0]), Color.BLUE);
                        //System.out.println("se cumple preservada");
                    } else if ("DIGITO".equals(spt[1])) {
                        int auxini = Integer.parseInt(spt[0]) - spt[2].length()+1;
                        findRemplace(auxini, Integer.parseInt(spt[0]), Color.cyan);
                        //System.out.println("se cumple digito");
                    } else if ("IDENTIFICADOR".equals(spt[1])) {
                        int auxini = Integer.parseInt(spt[0]) - spt[2].length()+1;
                        findRemplace(auxini, Integer.parseInt(spt[0]) + 1, Color.GREEN);
                        //System.out.println("se cumple digito");
                    }else if("OPERADOR".equals(spt[1])){
                        int auxini = Integer.parseInt(spt[0])-spt[2].length()+1;
                        findRemplace(auxini,Integer.parseInt(spt[0])+1,Color.BLACK);
                    }else if("CADENA".equals(spt[1])){
                        findRemplace(Integer.parseInt(spt[0]),Integer.parseInt(spt[2]),Color.orange);
                    }else if("LINECOMMENT".equals(spt[1])){
                        findRemplace(Integer.parseInt(spt[0]),Integer.parseInt(spt[2]),Color.LIGHT_GRAY);
                    }else if("ERROR".equals(spt[0])){
                        findRemplace(Integer.parseInt(spt[1]),Integer.parseInt(spt[1])+1,Color.red);
                    }else if("MULTCOMMENT".equals(spt[1])){
                        findRemplace(Integer.parseInt(spt[0]),Integer.parseInt(spt[2]),Color.lightGray);
                    }else if("INCOMPLETCAD".equals(spt[0])){
                        findRemplace(Integer.parseInt(spt[1]),doc.getLength(),Color.orange);
                    }else if("INCOMPLETCOMMENT".equals(spt[0])){
                        findRemplace(Integer.parseInt(spt[1]),doc.getLength(),Color.gray);
                    }
                }
            }
        }else{
            System.out.println("Error panel vacio");
        }
    }

    public void findRemplace(int ini, int fin, Color c) {
        StyleConstants.setForeground(style, c);
        int aux = fin - ini;
        doc.setCharacterAttributes(ini, fin, style, true);
    }

    /*public void resetStyle() {
        //sc.getDefaultStyleContext().getStyle(sc.DEFAULT_STYLE);
        //Style 
        style = jTextPaneCode.addStyle("Est24", null);
        StyleConstants.setForeground(style, Color.LIGHT_GRAY);
        doc.setCharacterAttributes(0, doc.getLength(), style, true);
    }*/
    
    public void compilar() throws IOException {
        String cadaux = "";
        String caderr = "Errores Lexicos:\n";
        guardar();
        jTextArea1.setText("");

        try {
            Process p = ejecutor.comando("ruby src/ide/Lexico.rb " + ruta);
            cadaux = ejecutor.leerBufer(ejecutor.salidaComando(p));
            colorear();
        } catch (IOException e) {}
        String linea = "";
        
        FileReader f = new FileReader("src/ide/errores.txt");

        if (!"".equals(jTextPaneCode.getText())) {
            try (BufferedReader b = new BufferedReader(f)) {
                while ((linea = b.readLine()) != null) {
                    caderr+=linea+"\n";
                }
            }
        }
        jTextArea1.setText(cadaux);
        jTextPaneErrores.setText(caderr);
    }
    
    public void compilar2() throws IOException {
        String cadaux = "";
        guardar();
        try {
            Process p = ejecutor.comando("ruby src/ide/Lexico.rb " + ruta);
            ejecutor.leerBufer(ejecutor.salidaComando(p));
            colorear();
        } catch (IOException e) {
            
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButtonBuild;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextPane jTextPaneCode;
    private javax.swing.JTextPane jTextPaneErrores;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    // End of variables declaration//GEN-END:variables
}
